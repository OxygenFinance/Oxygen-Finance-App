"use client"

import { useState, useEffect } from "react"
import { ethers } from "ethers"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { checkContentAccess, getContentDetails } from "@/utils/contract"
import { motion } from "framer-motion"

export function ContentViewer({ contentId }: { contentId: string }) {
  const [content, setContent] = useState(null)
  const [hasAccess, setHasAccess] = useState(false)
  const [isLoading, setIsLoading] = useState(true)
  const [isUnlocking, setIsUnlocking] = useState(false)

  useEffect(() => {
    async function fetchContentDetails() {
      try {
        const provider = new ethers.providers.Web3Provider(window.ethereum)
        const signer = provider.getSigner()
        const contentDetails = await getContentDetails(signer, contentId)
        setContent(contentDetails)

        const access = await checkContentAccess(signer, contentId)
        setHasAccess(access)
      } catch (error) {
        console.error("Error fetching content details:", error)
      } finally {
        setIsLoading(false)
      }
    }

    fetchContentDetails()
  }, [contentId])

  const handleUnlock = async () => {
    setIsUnlocking(true)
    // Simulate unlocking process
    await new Promise((resolve) => setTimeout(resolve, 2000))
    setHasAccess(true)
    setIsUnlocking(false)
  }

  if (isLoading) {
    return <div>Loading content...</div>
  }

  if (!content) {
    return <div>Content not found</div>
  }

  return (
    <Card className="max-w-3xl mx-auto">
      <CardHeader>
        <CardTitle>{content.title}</CardTitle>
      </CardHeader>
      <CardContent>
        {hasAccess ? (
          <motion.div
            initial={{ opacity: 0, scale: 0.8 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.5 }}
          >
            {/* Render the actual content here (video, comic, etc.) */}
            <div className="aspect-video bg-muted flex items-center justify-center">
              <p>Your exclusive content goes here</p>
            </div>
          </motion.div>
        ) : (
          <div className="text-center">
            <p className="mb-4">You need to unlock this content to view it.</p>
            <Button onClick={handleUnlock} disabled={isUnlocking}>
              {isUnlocking ? "Unlocking..." : "Unlock Content"}
            </Button>
          </div>
        )}
      </CardContent>
    </Card>
  )
}

